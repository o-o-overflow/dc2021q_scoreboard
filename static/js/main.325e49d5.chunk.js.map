{"version":3,"sources":["utils.js","Challenge.jsx","HiddenChallenge.jsx","ChallengeSection.jsx","ChallengeMenu.jsx","ChallengeModal.jsx","GameMatrix.jsx","Navbar.jsx","Rules.jsx","Scoreboard.jsx","App.jsx","Router.jsx","index.js"],"names":["EMPTY_SPLIT_TAGS","Map","random_map_pct","seed","f","rnd_float","Math","floor","DEFAULT_EMOJIS","Challenge","props","id","points","solved","tags","classes","classes_chalname","normal_tags","special_attrs","console","assert","has","get","get_chal_pos","my_pos_top","my_pos_left","styles","styles_chalname","backgroundImage","tooltip","join","className","onClick","onKeyPress","style","title","htmlFor","HiddenChallenge","ChallengeSection","challenges","map","challenge","index","unopened","key","ChallengeMenu","componentWillUnmount","onUnload","buildSections","sectionTitle","openChallenges","unopenedChallenges","Array","from","_","i","concat","sectionOrder","sections","this","React","Component","ChallengeModal","handleFlagChange","event","setState","alertCSS","flag","target","value","handleKeyPress","handleSubmit","state","length","status","worker","postMessage","loadData","description","fetch","method","then","response","json","body","log","message","showdown","Converter","literalMidWordUnderscores","simplifiedAutoLink","makeHtml","challengeId","flagHash","Worker","onmessage","data","complete","digest","terminate","css","tag_spans","tag","trim","tagthingy","my_emoji","my_points","emojispan","grantsline","form_submission","placeholder","onChange","type","solve_string","numSolved","role","width","aria-label","onClose","aria-hidden","dangerouslySetInnerHTML","__html","GameMatrix","teamScoreboardOrder","team","name","solvedRow","Set","solves","n_solves","solvesByChallenge","pointsByChallenge","emoji","tagsByChallenge","solves_str","scope","teamName","cls","Object","keys","cat","chall","push","sort","header","Navbar","leftLinks","item","exact","to","href","rel","Rules","Scoreboard","num","teamRows","lastSolveTime","pointsByTeam","x","chalIcon","ctfTimeTeamID","teams","undefined","ctfTimeLink","teamLink","element","document","getElementById","window","scroll","behavior","top","offsetTop","ReactModal","setAppElement","App","handleCloseModal","showModal","handleOpenChallengeModal","accessToken","showChallengeId","loadChallenges","processChallenges","catch","error","loadTeams","lastSolveTimeByTeam","solvesByTeam","solvesByTeamChallengeTime","forEach","time","max","ordinal_index_for_fallbacks","open","solvers","category","split_tags","split","filter","startsWith","special_tags","replace","val","set","split_normal_and_special_tags","Number","isInteger","parseInt","object","includes","a","b","unopened_by_category","openedByCategory","path","render","component","contentLabel","isOpen","onRequestClose","onSolve","Router","ReactDOM","createElement"],"mappings":"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","file":"static/js/main.325e49d5.chunk.js","sourcesContent":["\n// Only used if there's nothing selected, but has to pass the typecheck\nexport const EMPTY_SPLIT_TAGS = [ [], new Map([[\"emoji\", \"X\"], [\"lat\", 0], [\"lon\", 0]]) ]\n\nexport function split_normal_and_special_tags(tags, index)\n{\n  // tags -> normal_tags, special_attrs\n  //\n  // with \"--special-key-value\" --> special_attrs[key] = value\n  // WILL ALSO FILL IN DEFAULT VALUES for emoji,lat,lon\n  //\n  // this is icky, but doesn't require changing the db\n  // or hardcoding things in javascript\n  const normal_tags = tags.split(\",\")\n    .map((tag, index) => { return tag.trim(); })\n    .filter((tag) => !tag.startsWith(\"--\"));\n  const special_tags = tags.split(\",\")\n    .map((tag, index) => { return tag.trim(); })\n    .filter((tag) => tag.startsWith(\"--\"));\n\n  const special_attrs = new Map();\n  for (let i = 0; i < special_tags.length; i++) {\n    const tag = special_tags[i];\n    console.assert(tag.startsWith(\"--special-\"), tag);\n    const x = tag.replace(\"--special-\",'').split('-')\n    console.assert(x.length === 2, x.length, x);\n    const key = x[0].trim(), val = x[1].trim();\n    console.assert(!special_attrs.has(key), key, special_attrs);\n    special_attrs.set(key, val);\n  }\n\n  /* Fallback emoji */\n  if (!special_attrs.has('emoji'))\n    special_attrs.set('emoji', DEFAULT_EMOJIS[index % DEFAULT_EMOJIS.length]);\n\n  /* Fallback positon\n   * This doesn't work well, should be a last resort */\n  if (!special_attrs.has('lat'))\n    special_attrs.set('lat', random_map_pct(index));\n  if (!special_attrs.has('lon'))\n    special_attrs.set('lon', random_map_pct(index+47));\n\n  return [normal_tags, special_attrs];\n}\n\n\n\n/////// Position on the map -- just percents for now ////////////\n\nfunction rnd_float(seed)\n{\n    /* from v8 -- Robert Jenkins' 32 bit integer hash function.\n     * overkill, but all things I found are either terrible\n     * (like, linear on the seed), or ten pages long */\n    seed = seed & 0xffffffff\n    seed = (seed + 0x7ed55d16 + (seed << 12)) & 0xffffffff\n    seed = (seed ^ 0xc761c23c ^ (seed >>> 19)) & 0xffffffff\n    seed = (seed + 0x165667b1 + (seed << 5)) & 0xffffffff\n    seed = ((seed + 0xd3a2646c) ^ (seed << 9)) & 0xffffffff\n    seed = (seed + 0xfd7046c5 + (seed << 3)) & 0xffffffff\n    seed = (seed ^ 0xb55a4f09 ^ (seed >>> 16)) & 0xffffffff\n    return (seed & 0xfffffff) / 0x10000000;\n}\nfunction random_map_pct(seed)\n{\n    const f = rnd_float(seed);\n    const i = Math.floor(f*10);\n    return 5 + i*9;\n}\n\nexport function get_chal_pos(special_attrs)\n{\n    // For now they are all percents\n    console.assert(special_attrs.has('lat'), special_attrs);\n    console.assert(special_attrs.has('lon'), special_attrs);\n    const mtop = special_attrs.get('lat'), mleft = special_attrs.get('lon');\n    return [ '' + mtop + \"%\", '' + mleft + \"%\" ];\n}\n\n\nconst DEFAULT_EMOJIS = [\n    '🤡', '👹', '👺', '👻', '👽', '👾', '🤖', '😺', '😻', '🖖',\n    '🧟', '🧞', '👣', '🧳', '🧶', '🥽', '🥼', '💫', '🚌', '🚲',\n    '💥', '🐩', '🐕', '🦌', '🦄', '🐹', '🦜', '🎹', '🏵️', '🌸',    \n    '🌟', '🌠', '🌫️', '🔥', '✨', '🎋', '🥥', '🏝️', '🏜️', '🏖️',\n    '🍇', '🍅', '🥐', '🍔', '🍟', '🍿', '🍙', '🍨', '🍩', '🍰',    \n    '🍫', '🍭', '🍺', '🍽️', '🍍', '🥑', '🎪', '🎫', '⚾', '⚽',    \n    '🧩', '🎲', '🎷', '🎸', '🎻', '🏹', '💈', '🎏', '🧸', '🧾',    \n    '📝', '🚰', '💤', '🃏', '🀄', '🎴', 'xx', '📛', '🔱', '🌋'\n];\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\n\nimport { get_chal_pos } from \"./utils.js\";\n\n/* This is how they all appear together on the homepage -- see ChallengeModal for the dialog box */\n\n/* XXX: TO REMOVE TAGS: remove them from the tooltip */\n\n\n\nfunction Challenge(props) {\n  const { id, points, solved, tags } = props;\n\n  const onClick = () => props.onClick(props);\n  let classes = \"challenge\";\n  let classes_chalname = \"chalname\";\n\n  const [normal_tags, special_attrs] = tags;\n\n  const [my_pos_top, my_pos_left] = get_chal_pos(special_attrs);\n  let styles = { 'top': my_pos_top, 'left': my_pos_left };\n  const styles_chalname = { 'top': my_pos_top, 'left': my_pos_left };  /* will overlap, see padding and z-index */\n\n  if (solved) {\n    classes += \" challenge-solved\";\n    classes_chalname += \" chalname-solved\";\n    styles.backgroundImage = `url('/pics/radio_green.svg')`;  /* packer issues */\n  } else {\n    classes += \" challenge-unsolved\";\n    classes_chalname += \" chalname-unsolved\";\n    styles.backgroundImage = `url('/pics/radio_red.svg')`;\n  }\n\n  let tooltip = special_attrs.get('emoji') + \" \" + id + \"\\nCurrently \" + points + \" points\"\n        + \"\\n\" + normal_tags.join(' | ');\n\n\n  // XXX: make div and position both inside it?\n  return (\n    <>\n    <button\n      className={classes}\n      onClick={onClick}\n      onKeyPress={() => {}}\n      style={styles}\n      title={tooltip}\n      id={id}\n    >\n    </button>\n    <div style={styles_chalname} className={classes_chalname}><label htmlFor={id} title={tooltip}>{id}</label></div>\n    </>\n  );\n}\nChallenge.propTypes = exact({\n  id: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  points: PropTypes.number.isRequired,\n  solved: PropTypes.bool.isRequired,\n  tags: PropTypes.array.isRequired,\n});\nexport default Challenge;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\n\nfunction HiddenChallenge(props) {\n  return <div className=\"challenge challenge-hidden\"></div>;\n}\nHiddenChallenge.propTypes = exact({\n  id: PropTypes.number.isRequired,\n});\nexport default HiddenChallenge;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\nimport Challenge from \"./Challenge\";\nimport HiddenChallenge from \"./HiddenChallenge\";\n\n/* There's actually only one ChallengeSection */\n\nfunction ChallengeSection(props) {\n  const challenges = props.challenges.map((challenge, index) => {\n    if (challenge.unopened) {\n      return <HiddenChallenge id={challenge.unopened} key={index} />;\n    }\n\n    return (\n      <Challenge\n        {...challenge}\n        key={challenge.id}\n        onClick={props.onClick}\n        //item_index={index}\n      />\n    );\n  });\n\n  return challenges;\n}\nChallengeSection.propTypes = exact({\n  challenges: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClick: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n});\nexport default ChallengeSection;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\nimport ChallengeSection from \"./ChallengeSection\";\n\n/* There's actually only one ChallengeSection now (haiku) */\n\n\n\nclass ChallengeMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sectionOrder = [\"haiku\"];\n  }\n\n  componentWillUnmount = () => {\n    this.props.onUnload();\n  };\n\n  buildSections = (sectionTitle) => {\n    const openChallenges = this.props.challenges[sectionTitle] || [];\n    const unopenedChallenges = Array.from(\n      Array(this.props.unopened[sectionTitle] || 0),\n      (_, i) => ({ unopened: i + 1000 })\n    );\n    return (\n      <ChallengeSection\n        challenges={openChallenges.concat(unopenedChallenges)}\n        key={sectionTitle}\n        onClick={this.props.onClick}\n        title={sectionTitle}\n      />\n    );\n  };\n\n  render() {\n    const sections = this.sectionOrder.map(this.buildSections);\n    return (\n      <>\n        <div id=\"thebigdiv\">\n            {sections}\n        </div>\n        <footer className=\"chalmenu-footer\">\n          You can't stop the signal\n        </footer>\n      </>\n    );\n  }\n}\nChallengeMenu.propTypes = exact({\n  challenges: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.object))\n    .isRequired,\n  onClick: PropTypes.func.isRequired,\n  onUnload: PropTypes.func.isRequired,\n  unopened: PropTypes.objectOf(PropTypes.number).isRequired,\n});\nexport default ChallengeMenu;\n","import PropTypes from \"prop-types\";\nimport exact from \"prop-types-exact\";\nimport React from \"react\";\nimport showdown from \"showdown\";\n\n/* XXX: TO REMOVE TAGS: remove the tagthingy */\n\nclass ChallengeModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertCSS: \"\",\n      description: \"\",\n      flag: \"\",\n      status: \"\",\n    };\n    this.worker = new Worker(\"worker.js\");\n    this.worker.onmessage = (message) => {\n      if (message.data.complete) {\n        const status =\n          message.data.digest === this.state.flagHash\n            ? \"success!\"\n            : \"incorrect flag\";\n        this.setState({ status });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentWillUnmount() {\n    this.worker.terminate();\n  }\n\n  handleFlagChange = (event) => {\n    this.setState({ alertCSS: \"\", flag: event.target.value });\n  };\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.handleSubmit();\n    }\n  };\n\n  handleSubmit = () => {\n    if (this.state.flag.length < 1 || this.state.flag.length > 160) {\n      this.setState({ status: \"invalid flag\" });\n    } else {\n      this.worker.postMessage(this.state.flag);\n    }\n  };\n\n  loadData = () => {\n    this.setState({ description: \"Loading...\" });\n      fetch(\"scoreboard.json\", { method: \"GET\" })\n      .then((response) =>\n        response.json().then((body) => ({ body, status: response.status }))\n      )\n      .then(({ body, status }) => {\n        if (status !== 200) {\n          console.log(status);\n          console.log(body.message);\n          return;\n        }\n        const converter = new showdown.Converter({\n          literalMidWordUnderscores: true,\n          simplifiedAutoLink: true,\n        });\n        const description = converter.makeHtml(\n          body[this.props.challengeId][\"description\"]\n        ); /* html from chalmanager */\n        const flagHash = body[this.props.challengeId][\"flag_hash\"];\n        this.setState({ description, flagHash });\n      });\n  };\n\n  render() {\n    let status; /* magic name or something? */\n    if (this.state.status !== \"\") {\n      let css;\n      if (this.state.alertCSS) {\n        css = `alert ${this.state.alertCSS}`;\n      } else {\n        css = \"alert alert-secondary\";\n      }\n      status = (\n        <div className={css}>Status: {this.state.status}</div>\n      );\n    }\n\n    const [normal_tags, special_attrs] = this.props.tags;\n    const tag_spans = normal_tags.map((tag, index) => {\n        return (<span className=\"tag-boxy-thing\" key={index}>{`${tag.trim()}`}</span>);\n      });\n    const tagthingy = (<div className=\"tagthingy\">{tag_spans}</div>);\n\n    const my_emoji = special_attrs.get('emoji')\n    const my_points = this.props.points;\n    const emojispan = (<span className=\"emojifont\">{`${my_emoji}`}</span>);\n    const grantsline = (\n        <div className=\"grantsline\">\n          {`This station grants`}\n          {emojispan}\n          {`and is currently ${my_points} points`}\n        </div>);\n\n    let form_submission = \"\";\n\n    if (!this.props.solved) {\n      form_submission = (\n        <>\n          <label htmlFor=\"flag\" className=\"sr-only\">\n            Flag\n          </label>\n          <input\n            id=\"flag\"\n            className=\"form-control\"\n            placeholder=\"flag (format: OOO{…})\"\n            onChange={this.handleFlagChange}\n            onKeyPress={this.handleKeyPress}\n            type=\"text\"\n            value={this.state.flag}\n          />\n          <input\n            className=\"btn btn-primary\"\n            onClick={this.handleSubmit}\n            type=\"button\"\n            value=\"Submit Flag\"\n          />\n        </>\n      );\n    } else {\n      form_submission = (\n        <span className=\"already-solved-msg\">This radio station already likes you :)</span>\n      );\n    }\n\n    const solve_string =\n      this.props.numSolved === 1 ? \"1 solve\" : `${this.props.numSolved} solves`;\n\n    const chalmodalStyle = {\n        'maxWidth': '60em',\n        'minWidth': '600px',\n        width: 'fit-content',\n    };\n\n    return (\n      <div className=\"modal-dialog\" role=\"document\" style={chalmodalStyle}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{`${this.props.challengeId} (${solve_string})`}</h5>\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              onClick={this.props.onClose}\n              type=\"button\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <div dangerouslySetInnerHTML={{ __html: this.state.description }} />\n            {tagthingy}\n            {grantsline}\n            {status}\n          </div>\n          <div className=\"modal-footer\">\n            {form_submission}\n            <button\n              className=\"btn btn-secondary\"\n              onClick={this.props.onClose}\n              type=\"button\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nChallengeModal.propTypes = exact({\n  challengeId: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSolve: PropTypes.func.isRequired,\n  solved: PropTypes.bool.isRequired,\n  numSolved: PropTypes.number.isRequired,\n  tags: PropTypes.array.isRequired,\n  points: PropTypes.number.isRequired,\n});\nexport default ChallengeModal;\n","import React from \"react\";\n\n/* The \"Solves\" tab:  team Y N N Y N ... for each challenge */\n\nclass GameMatrix extends React.Component {\n  body() {\n    return this.props.teamScoreboardOrder.map((team) => {\n      return (\n        <tr key={team.name}>\n          <td className=\"teamname-td\" key={team.name}>\n            {team.name}\n          </td>\n          {this.solvedRow(new Set(team.solves), team.name)}\n        </tr>\n      );\n    });\n  }\n\n  header() {\n    const theHeaders = this.challenges.map((id) => {\n      const n_solves = this.props.solvesByChallenge[id] || 0;\n      const points = this.props.pointsByChallenge[id];\n      const emoji = this.props.tagsByChallenge[id][1].get('emoji');\n      const tooltip = `${id} ${emoji}\\n(solved by ${n_solves})\\ncurrently ${points} points`;\n      const solves_str = \"\\u00A0(\" + n_solves + \")\";\n      return (\n        <th key={id} scope=\"row\" title={tooltip} className=\"scoreboard-th\">\n          <span className=\"solves-header-emoji\">{emoji}</span>{solves_str}<br/>\n          <span className=\"solves-header-points\">{points}</span>\n        </th>\n      );\n    });\n\n    return theHeaders;\n  }\n\n  solvedRow(solves, teamName) {\n    return this.challenges.map((id) => {\n      const solved = solves.has(id);\n      const tooltip = \"\" + teamName + \": \" + id + \" is \" + (solved ? \"solved\" : \"unsolved\");\n      const cls = (solved ? \"solves-td-yes\" : \"solves-td-no\");\n      return <td title={tooltip} key={id} className={cls}>{solved ? \"Y\" : \"N\"}</td>; /* TODO: emoji */\n    });\n  }\n\n  render() {\n    this.challenges = [];\n    Object.keys(this.props.challenges).map((cat) => {\n      return this.props.challenges[cat].map((chall) => {\n        return this.challenges.push(chall.id);\n      });\n    });\n\n    this.challenges.sort();\n\n    return (\n      <div className=\"table-solves\">\n        <table className=\"table table-hover table-sm\">\n          <thead>\n            <tr>\n              <th className=\"sticky-left scoreboard-th\" scope=\"column\">\n                Team\n              </th>\n              {this.header()}\n            </tr>\n          </thead>\n          <tbody>{this.body()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default GameMatrix;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nfunction Navbar(props) {\n\n  const leftLinks = [\n    [\"Challenges\", \"/\", true],\n    [\"Rules\", \"/rules\"],\n    [\"Scoreboard\", \"/scoreboard\"],\n    [\"Solves\", \"/solves\"],\n  ].map((item) => (\n    <li className=\"nav-item\" key={item[0]}>\n      <NavLink className=\"nav-link\" exact={item[2]} to={item[1]}>\n        {item[0]}\n      </NavLink>\n    </li>\n  ));\n\n  // TODO: could I make it show on mouse movement?\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        DC29 Quals\n      </Link>\n      <div className=\"navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n            {leftLinks}\n            <li className=\"nav-item\" key=\"Chat\"><a className=\"nav-link\" href=\"https://discord.gg/defcon\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"CTF area at the bottom\">Chat</a></li>\n        </ul>\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\"><a className=\"nav-link\" href=\"https://twitter.com/oooverflow\" target=\"_blank\" rel=\"noopener noreferrer\">OOO</a></li>\n            <li className=\"nav-item\"><a className=\"nav-link\" href=\"https://defcon.org\" target=\"_blank\" rel=\"noopener noreferrer\">DEF&nbsp;CON</a></li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Rules() {\n  return (\n    <div className=\"rulespage\">\n\n      <h2>Rules Philosophy</h2>\n      <p>\n        Our goal is to run a challenging CTF that is as fair as possible. In that spirit, we present the rules, with the goal of keeping things fair, and hopefully fun. \n      </p>\n      <p>\n        We hope that you play with the spirit of competition and adopt a competitive, fair play, and positive sports(person/man/women)ship attitude. \n      </p>\n\n      <h2>Basic Rules</h2>\n      <ul>\n        <li>\n          No Denial of Service—DoS is super lame, don't do it or you will be\n          banned\n        </li>\n        <li>No sharing flags, exploits, or hints—Do your own hacks</li>\n        <li>\n          No attacks against our infrastructure—Hack the challenges, not us\n        </li>\n        <li>No automated scanning—For these challenges, do better</li>\n      </ul>\n\n      <h2>Scoring</h2>\n      <p>\n        We do adaptive scoring based on the number of solves:\n        starting at 500 and decreasing from there (based on the total number of\n        teams that solved the challenge).\n      </p><p>We{\" \"}\n        <a href=\"https://github.com/o-o-overflow/scoring-playground\">\n          released a scoring playground\n        </a>{\" \"}\n        so that teams with questions or concerns about the exact scoring\n        algorithm can see how that affects the overall ranking.\n          </p>\n\n      <h2>Challenge Release Schedule</h2>\n      <p>\n        We will release challenges throughout the competition as we see fit. We base these decisions on the flow of the game and the availability of the humans that wrote the challenge. We will not release any challenges less than 12 hours to the end of the competition (except for patches for shortcut solutions). \n      </p>\n\n      <h2>Shortcut Solutions</h2>\n      <p>\n        We strive to develop challenges that stretch and test everyone's skills. We also test the challenges to ensure that there's ~one intended path/solution. \n      </p>\n      <p>\n        Unfortunately, we are human and mistakes happen. Our policy will be: if we see that a challenge has been solved within what we consider to be a short time from launch by a \"shortcut solution\", then we might release an updated version. \n      </p>\n      <h2>Flag Format</h2>\n      <p>\n        Unless otherwise noted, all flags will be in the format: <code>OOO&#123;…&#125;</code>\n      </p>\n      <p>\n        <strong>\n          <em>\n            NOTE: You must submit the whole thing, including the{\" \"}\n            <code>OOO&#123;…&#125;</code>.\n          </em>\n        </strong>\n      </p>\n\n      <h2>Flag Location</h2>\n      <p>\n        Unless otherwise noted in the challenge description, all flags will be located at: <code>/flag</code>\n      </p>\n\n      <h2>Proof of Work (POW)</h2>\n      <p>\n        We may implement a POW in front of a challenge if we feel it is\n        necessary.\n        </p><p>\n        Please don't make it necessary\n      </p>\n\n      <h2>Hints</h2>\n      <p>\n        Do not expect hints. Particularly if a service is already pwned, it\n        would be unfair to give one team a hint when it's already solved.\n      </p><p>We do appreciate issue reports and if we\n        feel that something is significantly wrong, then we will update the\n        description and tweet about it. If you straight up ask for hints on \n        Discord, expect to be referred to this page.\n          </p>\n\n      <p>\n        The one exception to this rule is any challenge marked with\n        the tag <code>easy</code>. These challenges are (in our\n        estimation) on the easy side, and we will hint and help people\n        on these challenges. There will only be a few challenges\n        marked <code>easy</code>.\n      </p>\n\n      <h2>\n        Twitter and Discord\n      </h2>\n      <p>\n        <b>All game announcements will be made through our Twitter account{\" \"}\n        <a href=\"https://twitter.com/oooverflow\">@oooverflow</a></b>\n      </p>\n      <p>\n        Times change, and we must change with them.\n        We're using the official DEF CON\n        discord <a href=\"https://discord.gg/defcon\">discord.gg/defcon</a>.\n        You should hang out with us in the CTF area.\n      </p>\n\n      <h2>Flag Submission Delay</h2>\n      <p>Flags can be submitted once every 30 seconds per challenge.</p>\n\n      <h2>Team Size</h2>\n      <p>There is no limit on team sizes.</p>\n\n      <h2>Public pcaps</h2>\n      <p>We collect pcaps for almost all challenges. They will be relased after the game, anonymized.</p>\n      <p>You can find your own traffic (after the fact).\n        To do so, during the game, run <code>nc -v my-pcap-ip.oooverflow.io 5000</code></p>\n      <p>If you use multiple IPs to connect to the game, remember to run that command from all of them.</p>\n\n\n      <h2>Info on prequals, etc.</h2>\n      <p>See <a href=\"https://oooverflow.io/dc-ctf-2021-quals/\">our main website</a>.</p>\n\n      <h2>Who are you anyway?</h2>\n      <p>We are the Order of the Overflow. We are the current host of <a href=\"https://www.defcon.org/html/links/dc-ctf.html\">DEF CON CTF</a> (Quals and Finals).</p>\n      <p>Info about us and our philosophy is <a href=\"https://oooverflow.io/philosophy.html\">here</a> and we're reachable at <a href=\"mailto:team@oooverflow.io\">team@oooverflow.io</a>.</p>\n\n      <h2>OMG I'm insanely confused</h2>\n      <p>It's a hacking competition, and the DEF CON CTF is a hard one at that.</p>\n      <p>You might want to start with something easier, maybe from our <a href=\"https://archive.ooo\">archive</a> -- <a href=\"https://github.com/o-o-overflow/archiveooo/wiki/FAQ\">more info</a> or <a href=\"https://pwn.college\">start your hacking journey at pwn.college</a>.</p>\n    </div>\n  );\n}\nexport default Rules;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction chalIcon(challengeId, tagsByChallenge) {\n  const x = tagsByChallenge[challengeId];\n  console.assert(x.length === 2, tagsByChallenge, challengeId, x);\n  const special_attrs = x[1];\n  const my_emoji = special_attrs.get('emoji');\n  return (\n    <span\n      className={`scoreboard-chal-span`}\n      key={challengeId}\n      title={challengeId}\n    >{my_emoji}</span>\n  );\n}\n\nfunction Scoreboard(props) {\n  var num = 1;\n  const teams = props.teamScoreboardOrder.map((team) => ({\n    lastSolveTime: team.lastSolveTime,\n    name: team.name,\n    num: num++,\n    points: props.pointsByTeam[team.name],\n    solves: team.solves.map((id) =>\n      chalIcon(id, props.tagsByChallenge)\n    ),\n  }));\n\n  function ctfTimeLink(teamName) {\n    const ctfTimeTeamID = props.teams[teamName];\n    if (ctfTimeTeamID !== undefined) {\n      return (\n        <a\n          href={`https://ctftime.org/team/${ctfTimeTeamID}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {teamName}\n        </a>\n      );\n    }\n    return teamName;\n  }\n\n  const teamRows = teams.map((team) => (\n    <tr key={team.name} id={team.name}>\n      <td>{team.num}</td>\n      <td>{team.points}</td>\n      <td className=\"teamname-td\">{ctfTimeLink(team.name)}</td>\n      <td>{team.solves}</td>\n    </tr>\n  ));\n\n  function handleClick() {\n    const element = document.getElementById(props.team);\n    if (element) {\n      window.scroll({\n        behavior: \"smooth\",\n        top: element.offsetTop,\n      });\n    }\n  }\n\n  const teamLink = props.team ? (\n    <button type=\"button\" className=\"btn btn-link\" onClick={handleClick}>\n      (My Team)\n    </button>\n  ) : null;\n\n  return (\n    <div className=\"table-scoreboard\">\n      <table className=\"table table-hover table-sm\">\n        <thead>\n          <tr>\n            <th className=\"scoreboard-th\" scope=\"col\">Place</th>\n            <th className=\"scoreboard-th\" scope=\"col\">Points</th>\n            <th className=\"scoreboard-th\" scope=\"col\">Team {teamLink}</th>\n            <th className=\"scoreboard-th\" scope=\"col\">Completed</th>\n          </tr>\n        </thead>\n        <tbody>{teamRows}</tbody>\n      </table>\n    </div>\n  );\n}\nScoreboard.propTypes = {\n  tagsByChallenge: PropTypes.objectOf(PropTypes.array).isRequired,\n  lastSolveTimeByTeam: PropTypes.objectOf(PropTypes.number).isRequired,\n  pointsByTeam: PropTypes.objectOf(PropTypes.number).isRequired,\n  solvesByTeam: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string))\n    .isRequired,\n  teams: PropTypes.objectOf(PropTypes.number).isRequired,\n};\nexport default Scoreboard;\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Route } from \"react-router-dom\";\nimport ChallengeMenu from \"./ChallengeMenu\";\nimport ChallengeModal from \"./ChallengeModal\";\nimport GameMatrix from \"./GameMatrix\";\nimport Navbar from \"./Navbar\";\nimport Rules from \"./Rules\";\nimport Scoreboard from \"./Scoreboard\";\n\nimport { split_normal_and_special_tags, EMPTY_SPLIT_TAGS } from \"./utils.js\";\n\nReactModal.setAppElement(\"#root\");\n\nfunction challengePoints(solvers, category) {\n  if (!Number.isInteger(solvers) || solvers < 2) return 500;\n  return parseInt(100 + 400 / (1 + 0.08 * solvers * Math.log(solvers)), 10);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      challenges: {},\n      lastSolveTimeByTeam: {},\n      openedByCategory: {},\n      solvesByChallenge: {},\n      pointsByChallenge: {},\n      pointsByTeam: {},\n      showChallengeId: \"\",\n      showModal: null,\n      solvesByTeam: {},\n      tagsByChallenge: {},\n      teams: {},\n      teamScoreboardOrder: [],\n      unopened: {},\n    };\n  }\n\n  componentDidMount() {\n    this.loadChallenges();\n    this.loadTeams();\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: null });\n  };\n\n  handleOpenChallengeModal = (event) => {\n    if (this.state.accessToken === \"\") {\n      this.setState({\n        showChallengeId: event.id,\n        showModal: \"logIn\",\n      });\n    } else {\n      this.setState({\n        showChallengeId: event.id,\n        showModal: \"challenge\",\n      });\n    }\n  };\n\n  loadChallenges = () => {\n    fetch(\"/challenges.json\", { method: \"GET\" })\n      .then((response) =>\n        response.json().then((body) => ({ body, status: response.status }))\n      )\n      .then(({ body, status }) => {\n        if (status !== 200) {\n          console.log(status);\n          console.log(body.message);\n          return;\n        }\n        this.processChallenges(body.message);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  loadTeams = () => {\n    fetch(\"teams.json\", { method: \"GET\" })\n      .then((response) =>\n        response.json().then((body) => ({ body, status: response.status }))\n      )\n      .then(({ body, status }) => {\n        if (status !== 200) {\n          console.log(status);\n          console.log(body.message);\n          return;\n        }\n        this.setState({ teams: body.message.teams });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  processChallenges = (data) => {\n    const lastSolveTimeByTeam = {};\n    const solvesByChallenge = {};\n    const solvesByTeam = {};\n    const solvesByTeamChallengeTime = {};\n    data.solves.forEach(([id, team, time]) => {\n      if (id in solvesByChallenge) {\n        solvesByChallenge[id] += 1;\n      } else {\n        solvesByChallenge[id] = 1;\n      }\n\n      if (team in solvesByTeam) {\n        lastSolveTimeByTeam[team] = Math.max(lastSolveTimeByTeam[team], time);\n        solvesByTeam[team].push(id);\n        if (!(team in solvesByTeamChallengeTime)) {\n          solvesByTeamChallengeTime[team] = {};\n        }\n        solvesByTeamChallengeTime[team][id] = time;\n      } else {\n        lastSolveTimeByTeam[team] = time;\n        solvesByTeam[team] = [id];\n        if (!(team in solvesByTeamChallengeTime)) {\n          solvesByTeamChallengeTime[team] = {};\n        }\n        solvesByTeamChallengeTime[team][id] = time;\n      }\n    });\n\n    const challenges = {};\n    const pointsByChallenge = {};\n    const tagsByChallenge = {};\n    let ordinal_index_for_fallbacks = 0;  // ugly, but we need something unique for fallback\n    data.open.forEach(([id, tags, category, _openTime]) => {\n      const split_tags = split_normal_and_special_tags(tags, ordinal_index_for_fallbacks);\n      //console.log(\"loading chal\",id, \"->\",split_tags);\n      ordinal_index_for_fallbacks++;\n\n      tagsByChallenge[id] = split_tags;\n      pointsByChallenge[id] = challengePoints(solvesByChallenge[id], category);\n\n      const object = {\n        id,\n        points: pointsByChallenge[id],\n        solved: (solvesByTeam[this.state.team] || []).includes(id),\n        tags: split_tags,\n      };\n      console.assert(category === \"haiku\", category);\n      if (category in challenges) {\n        challenges[category].push(object);\n      } else {\n        challenges[category] = [object];\n      }\n    });\n\n    const pointsByTeam = {};\n    Object.keys(solvesByTeam).forEach((team) => {\n      let points = 0;\n      solvesByTeam[team].forEach((id) => {\n        points += pointsByChallenge[id];\n      });\n      pointsByTeam[team] = points;\n    });\n\n    const teamScoreboardOrder = Object.keys(pointsByTeam).map((name) => ({\n      lastSolveTime: lastSolveTimeByTeam[name],\n      name,\n      points: pointsByTeam[name],\n      solves: solvesByTeam[name],\n    }));\n    teamScoreboardOrder.sort((a, b) => {\n      if (a.points === b.points) {\n        return a.lastSolveTime - b.lastSolveTime;\n      }\n      return b.points - a.points;\n    });\n\n    this.setState({\n      challenges,\n      lastSolveTimeByTeam,\n      pointsByChallenge,\n      pointsByTeam,\n      solvesByTeam,\n      solvesByChallenge,\n      tagsByChallenge,\n      teamScoreboardOrder,\n      unopened: data.unopened_by_category,\n    });\n  };\n\n  render() {\n    const solved = (this.state.solvesByTeam[this.state.team] || []).includes(this.state.showChallengeId);\n    const tags = this.state.tagsByChallenge[this.state.showChallengeId] || EMPTY_SPLIT_TAGS;\n    const points = this.state.pointsByChallenge[this.state.showChallengeId] || 0;\n    return (\n      <>\n        <Navbar />\n        <main role=\"main\" className=\"container-fluid\">\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <ChallengeMenu\n                challenges={this.state.challenges}\n                onClick={this.handleOpenChallengeModal}\n                onUnload={this.handleCloseModal}\n                unopened={this.state.unopened}\n              />\n            )}\n          />\n          <Route exact path=\"/rules\" component={Rules} />\n          <Route\n            exact\n            path=\"/scoreboard\"\n            render={() => (\n              <Scoreboard\n                tagsByChallenge={this.state.tagsByChallenge}\n                lastSolveTimeByTeam={this.state.lastSolveTimeByTeam}\n                pointsByTeam={this.state.pointsByTeam}\n                solvesByTeam={this.state.solvesByTeam}\n                teamScoreboardOrder={this.state.teamScoreboardOrder}\n                team={this.state.team}\n                teams={this.state.teams}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/solves\"\n            render={() => (\n              <GameMatrix\n                challenges={this.state.challenges}\n                solvesByChallenge={this.state.solvesByChallenge}\n                teamScoreboardOrder={this.state.teamScoreboardOrder}\n                tagsByChallenge={this.state.tagsByChallenge}\n                pointsByChallenge={this.state.pointsByChallenge}\n              />\n            )}\n          />\n\n          <ReactModal\n            className=\"challenge-modal\"\n            contentLabel=\"Challenge Modal\"\n            isOpen={this.state.showModal === \"challenge\"}\n            onRequestClose={this.handleCloseModal}\n          >\n            <ChallengeModal\n              challengeId={this.state.showChallengeId}\n              onClose={this.handleCloseModal}\n              onSolve={this.loadChallenges}\n              solved={solved}\n              numSolved={\n                this.state.solvesByChallenge[this.state.showChallengeId] || 0\n              }\n              tags={tags}\n              points={points}\n            />\n          </ReactModal>\n        </main>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <App />\n    </HashRouter>\n  );\n}\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./Router\";\nimport \"./index.css\";\n\nReactDOM.render(React.createElement(Router), document.getElementById(\"root\"));\n"],"sourceRoot":""}